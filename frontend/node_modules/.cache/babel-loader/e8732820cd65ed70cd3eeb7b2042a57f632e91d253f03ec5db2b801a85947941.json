{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst reducer = combineReducers({});\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;\n// import {\n//   createStore,\n//   combineReducers,\n//   applyMiddleware,\n//   Middleware,\n// } from 'redux'\n// import thunk, { ThunkMiddleware } from 'redux-thunk'\n// import { composeWithDevTools } from 'redux-devtools-extension'\n\n// // define the root state type\n// type RootState = {}\n\n// const reducer = combineReducers<RootState>({})\n\n// const initialState: RootState = {}\n// const middleware: Array<Middleware<{}, RootState>> = [\n//   thunk as ThunkMiddleware<RootState, any>,\n// ]\n\n// const store = createStore(\n//   reducer,\n//   initialState,\n//   composeWithDevTools(applyMiddleware(...middleware))\n// )\n// export default store","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","reducer","initialState","middleware","store"],"sources":["C:/React/nodeapi/frontend/src/store.tsx"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst reducer = combineReducers({})\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\nexport default store\r\n// import {\r\n//   createStore,\r\n//   combineReducers,\r\n//   applyMiddleware,\r\n//   Middleware,\r\n// } from 'redux'\r\n// import thunk, { ThunkMiddleware } from 'redux-thunk'\r\n// import { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\n// // define the root state type\r\n// type RootState = {}\r\n\r\n// const reducer = combineReducers<RootState>({})\r\n\r\n// const initialState: RootState = {}\r\n// const middleware: Array<Middleware<{}, RootState>> = [\r\n//   thunk as ThunkMiddleware<RootState, any>,\r\n// ]\r\n\r\n// const store = createStore(\r\n//   reducer,\r\n//   initialState,\r\n//   composeWithDevTools(applyMiddleware(...middleware))\r\n// )\r\n// export default store\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,MAAMC,OAAO,GAAGJ,eAAe,CAAC,CAAC,CAAC,CAAC;AAEnC,MAAMK,YAAY,GAAG,CAAC,CAAC;AACvB,MAAMC,UAAU,GAAG,CAACJ,KAAK,CAAC;AAE1B,MAAMK,KAAK,GAAGR,WAAW,CACvBK,OAAO,EACPC,YAAY,EACZF,mBAAmB,CAACF,eAAe,CAAC,GAAGK,UAAU,CAAC,CACpD,CAAC;AACD,eAAeC,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}