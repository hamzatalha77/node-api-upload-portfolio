{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// define the root state type\n\nconst reducer = combineReducers({});\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","reducer","initialState","middleware","store"],"sources":["C:/React/nodeapi/frontend/src/store.tsx"],"sourcesContent":["import {\r\n  createStore,\r\n  combineReducers,\r\n  applyMiddleware,\r\n  Middleware,\r\n} from 'redux'\r\nimport thunk, { ThunkMiddleware } from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\n// define the root state type\r\ntype RootState = {}\r\n\r\nconst reducer = combineReducers<RootState>({})\r\n\r\nconst initialState: RootState = {}\r\nconst middleware: Array<Middleware<{}, RootState>> = [\r\n  thunk as ThunkMiddleware<RootState, any>,\r\n]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\nexport default store\r\n"],"mappings":"AAAA,SACEA,WAAW,EACXC,eAAe,EACfC,eAAe,QAEV,OAAO;AACd,OAAOC,KAAK,MAA2B,aAAa;AACpD,SAASC,mBAAmB,QAAQ,0BAA0B;;AAE9D;;AAGA,MAAMC,OAAO,GAAGJ,eAAe,CAAY,CAAC,CAAC,CAAC;AAE9C,MAAMK,YAAuB,GAAG,CAAC,CAAC;AAClC,MAAMC,UAA4C,GAAG,CACnDJ,KAAK,CACN;AAED,MAAMK,KAAK,GAAGR,WAAW,CACvBK,OAAO,EACPC,YAAY,EACZF,mBAAmB,CAACF,eAAe,CAAC,GAAGK,UAAU,CAAC,CACpD,CAAC;AACD,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}