{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\nodeapi\\\\frontend\\\\src\\\\pages\\\\PortfolioCreateScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPortfolio } from '../actions/portfolioActions';\nimport { PORTFOLIOS_CREATE_RESET } from '../constants/portfolioConstants';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioCreateScreen = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [github, setGithub] = useState('');\n  const [live, setLive] = useState('');\n  const [image, setImage] = useState('');\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const portfolioCreate = useSelector(state => state.portfolioCreate);\n  const {\n    success: successCreate,\n    error: errorCreate\n  } = portfolioCreate;\n  useEffect(() => {\n    if (successCreate) {\n      dispatch({\n        type: PORTFOLIOS_CREATE_RESET\n      });\n      navigate('/pushme');\n    }\n  }, [dispatch, successCreate, errorCreate, navigate]);\n  const uploadFileHandler = async e => {\n    const fileInput = e.target;\n    if (fileInput && fileInput.files && fileInput.files.length > 0) {\n      const file = fileInput.files[0];\n      const formData = new FormData();\n      formData.append('image', file);\n      try {\n        const config = {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        };\n        const {\n          data\n        } = await axios.post('/api/upload', formData, config);\n        setImage(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  const submitHandler = async e => {\n    e.preventDefault();\n    dispatch(createPortfolio({\n      name,\n      github,\n      live,\n      image\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Project name...\",\n      name: \"name\",\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Github code source...\",\n      name: \"github\",\n      onChange: e => setGithub(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Project Url...\",\n      name: \"live\",\n      onChange: e => setLive(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: image,\n      onChange: e => setImage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: uploadFileHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(PortfolioCreateScreen, \"sa8HT/L904Sm3tKrjNgYw8cZJeE=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = PortfolioCreateScreen;\nexport default PortfolioCreateScreen;\nvar _c;\n$RefreshReg$(_c, \"PortfolioCreateScreen\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","createPortfolio","PORTFOLIOS_CREATE_RESET","useNavigate","axios","jsxDEV","_jsxDEV","PortfolioCreateScreen","_s","name","setName","github","setGithub","live","setLive","image","setImage","navigate","dispatch","portfolioCreate","state","success","successCreate","error","errorCreate","type","uploadFileHandler","e","fileInput","target","files","length","file","formData","FormData","append","config","headers","data","post","console","submitHandler","preventDefault","onSubmit","children","placeholder","onChange","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/React/nodeapi/frontend/src/pages/PortfolioCreateScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Dispatch } from 'redux'\r\nimport { createPortfolio } from '../actions/portfolioActions'\r\nimport { PORTFOLIOS_CREATE_RESET } from '../constants/portfolioConstants'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\ninterface RootState {\r\n  portfolioCreate: {\r\n    loading: boolean\r\n    success: boolean\r\n    error: boolean\r\n    // ... other properties\r\n  }\r\n}\r\n\r\nconst PortfolioCreateScreen = () => {\r\n  const [name, setName] = useState('')\r\n  const [github, setGithub] = useState('')\r\n  const [live, setLive] = useState('')\r\n  const [image, setImage] = useState('')\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch<Dispatch<any>>()\r\n\r\n  const portfolioCreate = useSelector(\r\n    (state: RootState) => state.portfolioCreate\r\n  )\r\n\r\n  const { success: successCreate, error: errorCreate } = portfolioCreate\r\n\r\n  useEffect(() => {\r\n    if (successCreate) {\r\n      dispatch({ type: PORTFOLIOS_CREATE_RESET })\r\n      navigate('/pushme')\r\n    }\r\n  }, [dispatch, successCreate, errorCreate, navigate])\r\n\r\n  const uploadFileHandler = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    const fileInput = e.target as HTMLInputElement\r\n    if (fileInput && fileInput.files && fileInput.files.length > 0) {\r\n      const file = fileInput.files[0]\r\n      const formData = new FormData()\r\n      formData.append('image', file)\r\n\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        }\r\n\r\n        const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n        setImage(data)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    }\r\n  }\r\n\r\n  const submitHandler = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      createPortfolio({\r\n        name,\r\n        github,\r\n        live,\r\n        image,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Project name...\"\r\n        name=\"name\"\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Github code source...\"\r\n        name=\"github\"\r\n        onChange={(e) => setGithub(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Project Url...\"\r\n        name=\"live\"\r\n        onChange={(e) => setLive(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={image}\r\n        onChange={(e) => setImage(e.target.value)}\r\n      />\r\n      <input type=\"file\" onChange={uploadFileHandler} />\r\n      <button type=\"submit\">Send !</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PortfolioCreateScreen\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}