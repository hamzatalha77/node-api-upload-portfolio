{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\nodeapi\\\\frontend\\\\src\\\\pages\\\\PortfolioCreateScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPortfolio } from '../actions/portfolioActions';\nimport { PORTFOLIOS_CREATE_RESET } from '../constants/portfolioConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioCreateScreen = _ref => {\n  _s();\n  let {\n    history\n  } = _ref;\n  const [name, setName] = useState('');\n  const [github, setGithub] = useState('');\n  const [live, setLive] = useState('');\n  const [image, setImage] = useState('');\n  const dispatch = useDispatch();\n  const portfolioCreate = useSelector(state => state.portfolioCreate);\n  const {\n    success: successCreate,\n    error: errorCreate\n  } = portfolioCreate;\n  useEffect(() => {\n    if (successCreate) {\n      dispatch({\n        type: PORTFOLIOS_CREATE_RESET\n      });\n      history.push('/');\n    }\n  }, [dispatch, history, successCreate]);\n  const submitHandler = async e => {\n    e.preventDefault();\n    dispatch(createPortfolio({\n      name,\n      github,\n      live\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Project name...\",\n      name: \"name\",\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Github code source...\",\n      name: \"github\",\n      onChange: e => setGithub(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Project Url...\",\n      name: \"live\",\n      onChange: e => setLive(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Project Url...\",\n      name: \"live\",\n      onChange: e => setImage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(PortfolioCreateScreen, \"J7F1LMRLcFDZ4eqr5sjOaaxne6Y=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = PortfolioCreateScreen;\nexport default PortfolioCreateScreen;\nvar _c;\n$RefreshReg$(_c, \"PortfolioCreateScreen\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","createPortfolio","PORTFOLIOS_CREATE_RESET","jsxDEV","_jsxDEV","PortfolioCreateScreen","_ref","_s","history","name","setName","github","setGithub","live","setLive","image","setImage","dispatch","portfolioCreate","state","success","successCreate","error","errorCreate","type","push","submitHandler","e","preventDefault","onSubmit","children","placeholder","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/React/nodeapi/frontend/src/pages/PortfolioCreateScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Dispatch } from 'redux'\r\nimport { createPortfolio } from '../actions/portfolioActions'\r\nimport { PORTFOLIOS_CREATE_RESET } from '../constants/portfolioConstants'\r\n\r\ninterface RootState {\r\n  portfolioCreate: {\r\n    loading: boolean\r\n    success: boolean\r\n    error: boolean\r\n    // ... other properties\r\n  }\r\n}\r\n\r\nconst PortfolioCreateScreen = ({ history }: any) => {\r\n  const [name, setName] = useState('')\r\n  const [github, setGithub] = useState('')\r\n  const [live, setLive] = useState('')\r\n  const [image, setImage] = useState('')\r\n\r\n  const dispatch = useDispatch<Dispatch<any>>()\r\n\r\n  const portfolioCreate = useSelector(\r\n    (state: RootState) => state.portfolioCreate\r\n  )\r\n\r\n  const { success: successCreate, error: errorCreate } = portfolioCreate\r\n\r\n  useEffect(() => {\r\n    if (successCreate) {\r\n      dispatch({ type: PORTFOLIOS_CREATE_RESET })\r\n      history.push('/')\r\n    }\r\n  }, [dispatch, history, successCreate])\r\n\r\n  const submitHandler = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      createPortfolio({\r\n        name,\r\n        github,\r\n        live,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Project name...\"\r\n        name=\"name\"\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Github code source...\"\r\n        name=\"github\"\r\n        onChange={(e) => setGithub(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Project Url...\"\r\n        name=\"live\"\r\n        onChange={(e) => setLive(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Project Url...\"\r\n        name=\"live\"\r\n        onChange={(e) => setImage(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Send !</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PortfolioCreateScreen\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}